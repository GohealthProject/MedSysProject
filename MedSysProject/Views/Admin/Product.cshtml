@using MedSysProject.Models
@model IEnumerable<MedSysProject.Models.CProductsWrap>

@using MedSysProject.Controllers
@using static MedSysProject.Models.Product

@{
    ViewData["Title"] = "產品管理";
    Layout = "_Layout_Admin2";
}

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>


<style>
    .custom-modal-dialog {
        max-width: 100%;
    }

    .half-width {
        width: 50%; 
    }

    <style >
    .custom-btn {
        min-width: 80px; /* 確保所有按鈕具有相同的最小寬度 */
        height: 40px; /* 確保所有按鈕具有相同的高度 */
        padding: 5px 10px; /* 設置內邊距 */
        font-size: 16px; /* 統一字體大小 */
        line-height: 1.5; /* 行高，影響按鈕的垂直間距 */
        border-radius: 5px; /* 邊框圓角 */
        text-align: center; /* 文字居中 */
    }

    .custom-btn {
        width: 30px;
        height: 30px;
        padding: 0; /* 移除內邊距以確保按鈕不會變得太大 */
        display: inline-flex;
        justify-content: center;
        align-items: center;
    }

    .custom-icon {
        font-size: 15px; /* 或其他適當的大小，以確保圖標看起來和諧 */
    }
</style>



<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    const Product = document.getElementById("li-Product");
    const Index = document.getElementById("li-index");
    Product.className = "nav-item active";
    Index.className = "nav-item";
</script>

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">產品管理</h6>
    </div>
    <div class="card-body">
        <div>
    <div class="row g-3">
        @using (Html.BeginForm())
        {
            <div class="row align-items-end" style="margin-left: 1px;">
                        <div class="row align-items-end" style="margin-left: 8px;">
                            <div class="col-auto">
                                最小價格：@Html.TextBox("txtMinPrice", null, new { type = "number", @class = "form-control" })
                            </div>
                            <div class="col-auto">
                                最大價格：@Html.TextBox("txtMaxPrice", null, new { type = "number", @class = "form-control" })
                            </div>
                            <div class="col-auto">
                                <input type="submit" class="btn btn-primary" value="查詢" />
                            </div>
                            <div class="col-auto">
                                排序方式：
                                <a href="@Url.Action("Product", new { sortOrder = "asc"})">價格從低到高</a> |
                                <a href="@Url.Action("Product", new { sortOrder = "price_desc"})">價格從高到低</a>
                            </div>
                        </div>
            </div>
                    <div class="row align-items-center">
                        <div class="col-md-5" style="margin-left: 20px; margin-bottom: 20px; margin-top:10px">
                            @Html.Label("選擇產品類別：")
                            @Html.DropDownList("categoryId", new SelectList(ViewBag.Categories, "CategoriesId", "CategoriesName"), "全部類別", new { @class = "form-control", id = "categorySelect" })
                        </div>
                        <div class="col-md-6 text-right">
                            <a style=" margin-top: 30px; margin-right:-75px" class="btn btn-outline-success" data-toggle="modal" data-target="#modalCreate" onclick="loadCreateProductModal()">
                                <i class="fas fa-plus"></i> 新增產品
                            </a>
                        </div>
                    </div>
        }
    </div>
</div>

        <table class="table table-hover">
            <!-- 表格頭部 -->
            <thead class="thead-dark">
                <tr>
                    <!-- 列項目 -->
                    <th>序</th>
                    <th>@Html.DisplayNameFor(model => model.First().WrappedProductName)</th>
                    <th>@Html.DisplayNameFor(model => model.First().WrappedUnitPrice)</th>
                    <th>@Html.DisplayNameFor(model => model.First().WrappedLicense)</th>
                    <th>@Html.DisplayNameFor(model => model.First().WrappedIngredient)</th>
                    <th>@Html.DisplayNameFor(model => model.First().FimagePath)</th>
                    <th>@Html.DisplayNameFor(model => model.First().WrappedUnitsInStock)</th>
                    <th>@Html.DisplayNameFor(model => model.First().WrappedDiscontinued)</th>
                    <th>執行動作</th>
                </tr>
            </thead>
            <!-- 表格內容 -->
            <tbody>
                @{
                    int count = 0;
                    foreach (var item in Model)
                    {
                        count++;
                        <tr class="table-success">
                            <td>@count</td>
                            <td>@Html.DisplayFor(modelItem => item.WrappedProductName)</td>
                            <td>@Html.DisplayFor(modelItem => item.WrappedUnitPrice)</td>
                            <td>@Html.DisplayFor(modelItem => item.WrappedLicense)</td>
                            <td>@Html.DisplayFor(modelItem => item.WrappedIngredient)</td>

                            <td>
                                @{
                                    // 分割圖片路徑
                                    var imagePaths = item.FimagePath.Split(new[] { ',' }, StringSplitOptions.RemoveEmptyEntries);
                                    foreach (var imagePath in imagePaths)
                                    {
                                        <img src="@Url.Content("~/img-product/" + imagePath.Trim())" alt="Product Image" style="max-width: 100px; max-height: 100px;">
                                    }
                                }
                            </td>

                            <td>@Html.DisplayFor(modelItem => item.WrappedUnitsInStock)</td>
                            <td>
                                @if (item.WrappedDiscontinued == true)
                                {
                                    <span class="badge badge-success">上架中</span>
                                }
                                else
                                {
                                    <span class="badge badge-danger">已下架</span>
                                }
                            </td>
                            <td>
                                <a class="btn btn-info custom-btn" onclick="loadProductDetails(@Html.Raw(item.WrappedProductId))">
                                    <i class="fas fa-info-circle custom-icon"></i>
                                </a>
                                <a onclick="getProductDetails(@item.WrappedProductId)" class="btn btn-primary custom-btn" data-toggle="modal" data-target="#modalEdit">
                                    <i class="fas fa-edit custom-icon"></i>
                                </a>
                                
                                <a class="btn btn-danger custom-btn" onclick="deleteProduct(@item.WrappedProductId)">
                                    <i class="fas fa-trash-alt custom-icon"></i>
                                </a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        <!-- ---新增彈窗開始--- -->
        <div class="modal fade" id="modalCreate" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog custom-modal-dialog" role="document">
                    <!-- 添加自定義 CSS 類別 -->
                <div class="modal-content">
                    <!-- 主體 -->
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">新增產品</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <!-- 使用AJAX載入_CreateProductModal.cshtml的內容 -->
                        <div id="createProductModalContent"></div>
                    </div>
                  
                </div>
            </div>
        </div>
        <!-- ---新增彈窗結束--- -->
      
    </div>
</div>

@* ---修改彈窗開始--- *@
<div class="modal fade" id="modalEdit" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content" id="category_div">
        </div>
    </div>
</div>
@* ---修改彈窗結束--- *@

<!-- 產品詳細資訊彈窗 -->
<div class="modal fade" id="modalProductDetail" tabindex="-1" role="dialog" aria-labelledby="productDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content" id="productDetailDiv">
            <!-- 彈窗內容將通過 AJAX 動態加載 -->
        </div>
    </div>
</div>

<!-- 載入 Bootstrap 的 JavaScript -->

<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>



<script>

    function submitForm() {
        $.ajax({
            url: '@Url.Action("Create", "Admin")',
            type: 'POST',
            data: new FormData($('#productForm')[0]),
            processData: false,
            contentType: false,
            success: function (data) {
                // 使用 SweetAlert2 顯示成功提示
                Swal.fire({
                    title: '成功!',
                    text: '新增產品成功',
                    icon: 'success',
                    confirmButtonText: '確定'
                }).then((result) => {
                    // 在用戶點擊確定後的操作
                    $('#modalCreate').modal('hide');
                    $('.modal-backdrop').remove();
                    location.reload(); // 重新加載頁面
                });
            },
            error: function (error) {
                // 使用 SweetAlert2 顯示錯誤提示
                Swal.fire({
                    title: '提交失敗',
                    text: '錯誤：' + error.statusText,
                    icon: 'error',
                    confirmButtonText: '關閉'
                });
            }
        });
    }


    function loadCreateProductModal() {
        $.ajax({
            url: '@Url.Action("Create", "Admin")',
            type: 'GET',
            success: function (data) {
                $('#createProductModalContent').html(data);
                $('#modalCreate').modal('show');
                bindImageUploadEvent(); // 呼叫綁定事件的函數
            },
            error: function (error) {
                alert('載入_CreateProductModal 失敗：' + error.statusText);
            }
        });
    }
    function bindImageUploadEvent() {
        var fileInput = document.getElementById('formFileForCreate');
        if (fileInput) {
            fileInput.addEventListener('change', function (e) {
                var files = e.target.files;
                var imagePreviewContainer = document.getElementById('imagePreviewForCreate');
                imagePreviewContainer.innerHTML = '';

                for (let i = 0; i < files.length; i++) {
                    var file = files[i];
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        var imgElement = document.createElement('img');
                        imgElement.src = e.target.result;
                        imgElement.style.maxWidth = '100px';
                        imgElement.style.maxHeight = '100px';
                        imgElement.style.marginRight = '10px';
                        imagePreviewContainer.appendChild(imgElement);
                    };

                    reader.readAsDataURL(file);
                }
            });
        } else {
            console.error('找不到ID為 formFileForCreate 的文件輸入元素。');
        }
    }
  
    // 加載編輯產品模態的函數
    function getProductDetails(productId) {
        $.ajax({
            url: '@Url.Action("Edit", "Admin")',
            type: 'GET',
            data: { productId: productId },
            success: function (data) {
                $('#category_div').html(data);
                // 呼叫綁定圖像上傳事件的函數
                bindImageUploadEventForEdit();
            },
            error: function (error) {
                alert('獲取產品資訊失敗：' + error.statusText);
            }
        });
    }

    // 綁定圖像上傳事件的函數
    function bindImageUploadEventForEdit() {
        var fileInput = document.getElementById('formFileForEdit');
        if (fileInput) {
            fileInput.addEventListener('change', function (e) {
                var files = e.target.files;
                var imagePreviewContainer = document.getElementById('imagePreviewForEdit');
                imagePreviewContainer.innerHTML = ''; // 清空現有預覽

                for (let i = 0; i < files.length; i++) {
                    var file = files[i];
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        var imgElement = document.createElement('img');
                        imgElement.src = e.target.result;
                        imgElement.style.maxWidth = '100px';
                        imgElement.style.maxHeight = '100px';
                        imagePreviewContainer.appendChild(imgElement);
                    };

                    reader.readAsDataURL(file);
                }
            });
        } else {
            console.error('找不到ID為 formFileForEdit 的檔案輸入元素。');
        }
    }

    
    function displayProductDetails(data) {
        $('#editProductName').val(data.WrappedProductName);
        $('#inputPrice').val(data.WrappedUnitPrice);
        $('#inputLicense').val(data.WrappedLicense);
        $('#inputIngredient').val(data.WrappedIngredient);
        $('#inputDescription').val(data.WrappedDescription);
        $('#inputDiscontinued').val(data.WrappedDiscontinued ? 'true' : 'false');

        // 初始化 SelectedCategories 為空陣列
        var selectedCategories = data.SelectedCategories && Array.isArray(data.SelectedCategories) ? data.SelectedCategories : [];

        selectedCategories.forEach(function (categoryId) {
            $('#category' + categoryId).prop('checked', true);
        });

        if (data && data.FimagePath) {
            $('#previewImage').attr('src', data.FimagePath);
        }
    }


    function getProductDetails(productId) {
        $.ajax({
            url: '@Url.Action("Edit", "Admin")',
            type: 'GET',
            data: { productId: productId }, // 使用productId而不是id
            success: function (data) {
                $('#category_div').empty().append(data)
                // 處理成功的回應，填充產品資訊到表單
                displayProductDetails(data);
            },
            error: function (error) {
                // 處理 AJAX 請求失敗的情況
                alert('獲取產品資訊失敗：' + error.statusText);
            }
        });
    }

    async function deleteProduct(productId) {
        // 確認是否真的要刪除
        const result = await Swal.fire({
            title: "確定要刪除嗎？",
            text: "此步驟將無法復原！",
            icon: "warning",
            showCancelButton: true,
            cancelButtonText: "取消",
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "確定刪除"
        });

        if (result.isConfirmed) {
            // 使用 AJAX 向伺服器發送刪除請求
            $.ajax({
                url: '@Url.Action("Delete", "Admin")',
                type: 'POST',
                data: { id: productId },
                success: function (data) {
                    Swal.fire({
                        title: "刪除成功!",
                        text: "產品已被成功刪除。", // 只顯示簡單的文本消息
                        icon: "success",
                        showConfirmButton: false,
                        timer: 1500
                    });
                    //等待 1.5 秒後，重新載入頁面
                    setTimeout(function () {
                        location.reload();
                    }, 1500);
                },
                error: function (error) {
                    // 處理 AJAX 請求失敗的情況
                    Swal.fire({
                        icon: "error",
                        title: "Oops...",
                        text: "操作失敗: " + error.statusText // 顯示錯誤的狀態文字
                    });
                }
            });
        }
    }

    $(document).ready(function () {
        $(document).on('click', '#submitEdit', function (e) {
            e.preventDefault();

            // 發送 AJAX 請求
            $.ajax({
                url: '@Url.Action("Edit", "Admin")', // 確保 URL 正確
                type: 'POST',
                data: new FormData($('#editProductForm')[0]),
                processData: false,
                contentType: false,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                },
                success: function (response) {
                    if (response.success) {
                        // 處理成功回應
                        Swal.fire({
                            title: '修改成功!',
                            text: '產品資料已更新',
                            icon: 'success',
                            confirmButtonText: '確定'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                location.reload();
                            }
                        });
                    } else {
                        // 處理失敗回應
                        Swal.fire({
                            title: '修改失敗',
                            text: response.message,
                            icon: 'error',
                            confirmButtonText: '關閉'
                        });
                    }
                },
                error: function (error) {
                    // 處理請求錯誤
                    Swal.fire({
                        title: '錯誤',
                        text: '發生錯誤：' + error.statusText,
                        icon: 'error',
                        confirmButtonText: '關閉'
                    });
                }
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {
        var categorySelect = document.getElementById("categorySelect");
        if (categorySelect) {
            categorySelect.addEventListener("change", function () {
            
                if (this.form) {
                    this.form.submit();
                } else {
                    console.error("下拉列表不在表单内");
                }
            });
        } else {
            console.error("未找到下拉列表元素");
        }
    });


    function loadProductDetails(productId) {
        console.log("ProductId:", productId); 
        $.ajax({
            url: '@Url.Action("ProductDetail", "Admin")?productId=' + productId,
            type: 'GET',
            success: function (data) {
                $('#productDetailDiv').html(data);
                $('#modalProductDetail').modal('show');
            },
            error: function (error) {
                console.error('加载产品详细信息失败：' + error.statusText);
            }
        });
    }



    
</script>






