@using MedSysProject.Models
@using MedSysProject.Controllers
@using static MedSysProject.Models.Member
@model IEnumerable<MedSysProject.Models.Member>

@{
    ViewData["Title"] = "MemberManager";
    Layout = "_Layout_Admin2";
}

@* 這邊是確保左側邊欄的目前區域標亮 *@
@* ---------------------------------------------- *@
<script>
    const MemberManager = document.getElementById("li-MemberManager");
    const Index = document.getElementById("li-index");
    MemberManager.className = "nav-item active";
    Index.className = "nav-item";
</script>
@* ------------------------------------- *@

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">會員管理</h6>
    </div>
    <div class="card-body">

        <nav aria-label="Page navigation example">
            <ul class="pagination pagination-sm">
                @{
                    if (ViewBag.page == null)
                    {

                    }

                    else
                    {
                        int previous = ViewBag.page - 1;
                        int next = ViewBag.page + 1;
                        int current = ViewBag.page;
                        if (ViewBag.page == 1)
                        {
                                        <li class="page-item disabled"><a class="page-link" href="~/admin/MemberManager?page=1">首頁</a></li>
                                        <li class="page-item disabled"><a class="page-link" href="~/admin/MemberManager?page=@previous">上一頁</a></li>
                        }
                        else
                        {
                                        <li class="page-item"><a class="page-link" href="~/admin/MemberManager?page=1">首頁</a></li>
                                        <li class="page-item"><a class="page-link" href="~/admin/MemberManager?page=@previous">上一頁</a></li>
                        }

                        for (int i = 1; i <= ViewBag.maxpage; i++)
                        {
                            if (i == ViewBag.page)
                            {
                                            <li class="page-item active"><a class="page-link" href="~/admin/MemberManager?page=@i">@i</a></li>
                            }
                            else
                            {
                                            <li class="page-item"><a class="page-link" href="~/admin/MemberManager?page=@i">@i</a></li>
                            }
                        }

                        if (ViewBag.page == ViewBag.maxpage)
                        {
                                        <li class="page-item disabled"><a class="page-link" href="~/admin/MemberManager?page=@next">下一頁</a></li>
                                        <li class="page-item disabled"><a class="page-link" href="~/admin/MemberManager?page=@ViewBag.maxpage">末頁</a></li>
                        }
                        else
                        {
                                        <li class="page-item"><a class="page-link" href="~/admin/MemberManager?page=@next">下一頁</a></li>
                                        <li class="page-item"><a class="page-link" href="~/admin/MemberManager?page=@ViewBag.maxpage">末頁</a></li>
                        }

                    }
                }
            </ul>
        </nav>

        <table class="table table-hover">
            <thead>
                <tr>
                    <th>
                        序
                    </th>
                    <th>
                        照片
                    </th>
                    <th>
                        姓名
                    </th>
                    <th>
                        性別
                    </th>
                    <th>
                        生日
                    </th>
                    <th>
                        手機
                    </th>
                    <th>
                        信箱
                    </th>
                    <th>執行動作</th>
                </tr>
            </thead>
            <tbody id="go">
                @{
                    int count = 0;
                    if (ViewBag.page != null)
                    {
                        count = (ViewBag.page - 1) * ViewBag.pgsize;
                    }
                    foreach (var item in Model)
                    {
                        count++;
                                    <tr>
                                        <td>
                                            @count
                                            <input type="hidden" value="@item.MemberId" />
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.MemberImage)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.MemberName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.MemberGender)
                                        </td>
                                            @{
                                                string date  = item.MemberBirthdate.ToString().Split(" ")[0];
                                                <td>@date</td>
                                            }
                                        <td>
                                            @Html.DisplayFor(modelItem => item.MemberPhone)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.MemberEmail)
                                        </td>
                                        <td style="display:none;">
                                            @Html.DisplayFor(modelItem => item.MemberPassword)
                                        </td>
                                        <td style="display:none;">
                                            @Html.DisplayFor(modelItem => item.MemberAddress)
                                        </td>
                                        <td style="display:none;">
                                            @Html.DisplayFor(modelItem => item.MemberContactNumber)
                                        </td>
                                        <td style="display:none;">
                                            @Html.DisplayFor(modelItem => item.MemberNickname)
                                        </td>

                                        <td>
                                            <a onclick="updata(this)" class="btn btn-primary" data-toggle="modal" data-target="#modalEdit">
                                                <i class="fas fa-user-edit"></i>
                                            </a>

                                            <a onclick="detail(this)" class="btn btn-info" data-toggle="modal" data-target="#modalDetail">
                                                <i class="fas fa-info-circle"></i>
                                            </a>

                                            <a class="btn btn-danger" onclick="get(this)">
                                                @*href="@Url.Action("Delete", new { id = item.EmployeeId })"*@
                                                <i class="fas fa-user-times"></i>
                                            </a>
                                        </td>
                                    </tr>
                    }
                }
            </tbody>
        </table>

        @* ---修改彈窗開始--- *@
        <div class="modal fade" id="modalEdit" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
             aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <!--Header-->
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel">修改會員資料</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <!--Body-->
                    <div class="modal-body">

                        <div class="row">
                            <div class="col-md-10">
                                <form asp-action="MemberCreate" id="myUpdataform">
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                    <div class="form-group">
                                        <input type="hidden" id="inputId" value="" name="MemberId" />
                                        <label class="control-label">姓名</label>
                                        <input class="form-control" value="" id="inputName" name="MemberName" />
                                        <span class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">姓別</label>
                                        <select class="form-control" value="" id="inputGender" name="Gender">
                                            <option value="男">男</option>
                                            <option value="女">女</option>
                                        </select>
                                        <span class="text-danger"></span>
                                    </div>
                                    @* 生日 *@
                                    <div class="form-group">
                                        <label class="control-label">生日</label>
                                        <input type="date" class="form-control" value="" id="inputDate" name="MemberBirthDate" />
                                        <span class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">手機</label>
                                        <input class="form-control" value="" id="inputPhone" name="MemberPhoneNum" />
                                        <span class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">信箱</label>
                                        <input class="form-control" value="" id="inputEmail" name="MemberEmail" />
                                        <span class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">地址</label>
                                        <input class="form-control" value="" id="inputAddress" name="MemberAddress" />
                                        <span class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">連絡電話</label>
                                        <input class="form-control" value="" id="inputContact" name="MemberContact" />
                                        <span class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">暱稱</label>
                                        <input class="form-control" value="" id="inputNick" name="MemberNick" />
                                        <span class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">密碼</label>
                                        <input class="form-control" value="" id="inputPwd" name="MemberPassWord" />
                                        <span class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <label for="formFile" class="form-label">照片</label>
                                        <input type="file" class="form-control" id="formFile" name="formFile" />
                                    </div>
                                </form>
                            </div>
                        </div>
                        @*
                        @section Scripts {
                        @{
                        await Html.RenderPartialAsync("_ValidationScriptsPartial");
                        }
                        } *@


                        <!--Footer-->
                        <div class="modal-footer">
                            <button type="button" class="btn btn-outline-primary" data-dismiss="modal">取消</button>
                            <button class="btn btn-success" onclick="putdata2()">確定修改</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @* ---修改彈窗結束--- *@

        @* ---詳細資料彈窗開始--- *@
        <div class="modal fade" id="modalDetail" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
             aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <!--Header-->
                    <div class="modal-header">
                        <h4 class="modal-title" id="myModalLabel">會員詳細資料</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <!--Body-->
                    <div class="modal-body">


                        @* 詳細資料 *@
                        <ul>
                            <li>編號：</li>
                            <li>姓名：</li>
                            <li>性別：</li>
                            <li>生日：</li>
                            <li>手機：</li>
                            <li>信箱：</li>
                            <li>地址：</li>
                            <li>連絡電話：</li>
                            <li>暱稱：</li>
                            <li>密碼：</li>
                            <li>照片：</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        @* ---詳細資料彈窗結束--- *@
    </div>
</div>

<script src="/vendor/jquery/jquery.min.js"></script>
<script>
    const id = document.getElementById("Memid");
    function get(element) {
        let par = element.parentNode.parentNode;
        var hidd = par.querySelector('input[type="hidden"]');
        console.log(hidd.value);
        del(hidd.value);

    }
    //主畫面按下去要彈框框的事件
    function updata(element) {
        showTogget(element)
    }

    async function putdata2() {
        let id = document.getElementById("inputId").value;
        let apiurl = `https://localhost:7078/api/Members/Up/${id}`;
        var myForm = document.getElementById("myUpdataform");
        var data = new FormData(myForm);
        const response = await fetch(apiurl, {
            method: 'PUT',
            body: data
        });
        const status = await response.status;
        if (response.ok) {
            $('#modalEdit').modal('hide');

            Swal.fire({
                title: "修改成功!",
                text: state,
                icon: "success",
                showConfirmButton: false,
                timer: 1500
            });

            research();
        }
    }

    //把資料印到彈出來的視窗
    function showTogget(element) {
        let par = element.closest("tr");
        let tds = par.getElementsByTagName("td");
        let tdName = tds[2].innerHTML;
        let tdGender = tds[3].innerHTML;

        let tddateA = tds[4].innerHTML; //這裡要把2000/01/01轉成2000-01-01
        let tddateB = tddateA.replace('/', '-');
        let tddateC = tddateB.replace('/', '-');
        console.log(tddateC.trim());
        var tddateD = new Date(tddateC.trim());
        var year = tddateD.getFullYear();
        // getMonth() 返回的月份是從 0 開始的，所以需要加 1
        var month = (tddateD.getMonth() + 1).toString().padStart(2, '0');
        var day = tddateD.getDate().toString().padStart(2, '0');
        var tddate = `${year}-${month}-${day}`;

        let tdphone = tds[5].innerHTML;
        let tdemail = tds[6].innerHTML;

        let tdpwd = tds[7].innerHTML;
        let tdaddress = tds[8].innerHTML;
        let tdcontact = tds[9].innerHTML;
        let tdnick = tds[10].innerHTML;
        let tdid = tds[0].querySelector('input[type="hidden"]').value;
        console.log(tdid);
        document.getElementById("inputName").value = tdName.trim();
        document.getElementById("inputGender").value = tdGender.trim();
        document.getElementById("inputDate").value = tddate.trim();
        document.getElementById("inputPhone").value = tdphone.trim();
        document.getElementById("inputEmail").value = tdemail.trim();
        document.getElementById("inputPwd").value = tdpwd.trim();
        document.getElementById("inputAddress").value = tdaddress.trim();
        document.getElementById("inputContact").value = tdcontact.trim();
        document.getElementById("inputNick").value = tdnick.trim();

        // console.log(data);
    }
    async function research() {

        await new Promise(resolve => setTimeout(resolve, 1600));
        window.location.reload();

        const response = await fetch('https://localhost:7078/api/Members');
        const datas = await response.json();
        console.log(datas.$values)
        let count = 1;
        const value = datas.$values.map(mem => {
            const id = mem.memberId;
            const name = mem.memberName;
            const gender = mem.memberGender;
            const date = mem.memberBirthdate;
            // const birthdate = date.split("T")[0];
            console.log(date)
            const phone = mem.memberPhone;
            const email = mem.memberEmail;
            const pwd = mem.memberPassword;
            const address = mem.memberAddress;
            const contact = mem.memberContactNumber;
            const nick = mem.memberNickname;
            //const image = mem.memberImage;

            let s = 
            `
    <tr>
        <td>
            ${count}
            <input type="hidden" value=${id} />
        </td>
        <td>
    @*image*@
        </td>
        <td>
            ${name}
        </td>
        <td>
            ${gender}
        </td>
        <td>
            ${date}
        </td>
        <td>
            ${phone}
        </td>
        <td>
            ${email}
        </td>
        <td style="display:none;">
            ${pwd}
        </td>
        <td style="display:none;">
            ${address}
        </td>
        <td style="display:none;">
            ${contact}
        </td>
        <td style="display:none;">
            ${nick}
        </td>

        <td>
            <a onclick="updata(this)" class="btn btn-primary" data-toggle="modal"
                data-target="#modalEdit">
                <i class="fas fa-user-edit"></i>
            </a>

            <a onclick="detail(this)" class="btn btn-info" data-toggle="modal"
                data-target="#modalDetail">
                <i class="fas fa-info-circle"></i>
            </a>

            <a class="btn btn-danger" onclick="get(this)">
    @*href="@Url.Action("Delete", new { id = item.EmployeeId })"*@
                <i class="fas fa-user-times"></i>
            </a>
        </td>
    </tr>
            `
            count++;
            console.log(count);
            return s;
        })
        document.getElementById("go").innerHTML = value.join('');

        //wait 2sec
        await new Promise(resolve => setTimeout(resolve, 1500));
        window.location.reload();
    }

    async function del(id) {
        const result = await Swal.fire({
            title: "確定要刪除嗎？",
            text: "此步驟將無法復原！",
            icon: "warning",
            showCancelButton: true,
            cancelButtonText: "取消",
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "確定刪除"
        });

        if (result.isConfirmed) {
            const response = await fetch(`https://localhost:7078/api/Members/${id}`, {
                method: 'DELETE'
            });
            let data = await response.status
            if (data == 200 || 
                data == 201 ||
                data == 202 ||
                data == 203 ||
                data == 204) {
                Swal.fire({
                    title: "刪除成功!",
                    text: data + ",您已經刪除此筆資料",
                    icon: "success",
                    showConfirmButton: false,
                    timer: 1500
                });
            } else {
                Swal.fire({
                    title: "刪除失敗!",
                    text: data + ",請重新操作",
                    icon: "error",
                    showConfirmButton: false,
                    timer: 1500
                });
            }
                research();
        }
    }

</script>