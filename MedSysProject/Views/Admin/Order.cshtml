@model IEnumerable<MedSysProject.Models.Order>
@using System.Text.Json;
@using static List<MedSysProject.Models.COrderWarp>;
@using MedSysProject.Models;

@{
    ViewData["Title"] = "訂單管理";
    Layout = "_Layout_Admin2";
}

@* 這邊是確保左側邊欄的目前區域標亮 *@
@* ---------------------------------------------- *@
<script>
    const Order = document.getElementById("li-Order");
    const Index = document.getElementById("li-index");
    Order.className = "nav-item active";
    Index.className = "nav-item";
</script>
@* ------------------------------------- *@

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">訂單管理</h6>
    </div>
    <div class="card-body">

        <div id="choost" class="btn-group">
            <button type="button" class="btn btn-primary dropdown-toggle" id="choosebtn">
                所有篩選
            </button>
        </div>

        <div class="card" id="choose" style="margin:1em 1em 1em 1em;padding:1em 1em 1em 1em; display:none">
            <form method="post">
                @{
                    <input type="hidden" value="dateKey" name="key" />
                    <div class="row p-3">
                        <div class="col-auto">下訂日期：</div>
                        <div class="col-auto">
                            <input class="form-control" type="date" name="txtMinDate" value="@ViewBag.mindate" />
                        </div>
                        -
                        <div class="col-auto">
                            <input class="form-control" type="date" name="txtMaxDate" value="@ViewBag.maxdate" />
                        </div>

                    </div>

                }
                <p style="width: 10%;">

                    <div class="d-flex">
                        <div class="col-auto">
                            目前狀態：
                            <div class="ml-1">
                                @{
                                    foreach (var item in ViewBag.State)
                                    {
                                        if (ViewBag.Checked != null)
                                        {
                                            if (ViewBag.Checked.Contains((int)item.StateId))
                                            {
                                                <div class="form-check-inline" style="margin-left:1em; display:inline;">
                                                    <input class="form-check-input" type="checkbox" name="statechk" value="@item.StateId" id="@item.StateId" checked>
                                                    <label class="form-check-label badge badge-success" for="@item.StateId">
                                                        @item.StateName
                                                    </label>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="form-check-inline" style="margin-left:1em; display:inline;">
                                                    <input class="form-check-input" type="checkbox" name="statechk" value="@item.StateId" id="@item.StateId">
                                                    <label class="form-check-label badge badge-success" for="@item.StateId">
                                                        @item.StateName
                                                    </label>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <div class="form-check-inline" style="margin-left:1em; display:inline;">
                                                <input class="form-check-input" type="checkbox" name="statechk" value="@item.StateId" id="@item.StateId">
                                                <label class="form-check-label" for="@item.StateId">
                                                    @item.StateName
                                                </label>
                                            </div>
                                        }

                                    }
                                }
                            </div>
                        </div>
                    </div>

                </p>

                <input class="btn btn-primary" type="submit" value="篩選" />
                <a class="btn btn-secondary" href="@Url.Content("~/Admin/Order")">重設</a>
            </form>
        </div>

        <nav aria-label="Page navigation example" style="margin-top:1em;">
            <ul class="pagination pagination-sm">
                @{
                    if (ViewBag.page == null)
                    {

                    }

                    else
                    {
                        string PPath = "~/Admin/Order?page=";
                        int previous = ViewBag.page - 1;
                        int next = ViewBag.page + 1;
                        int current = ViewBag.page;

                        int halfWindowSize = 2; // Adjust this value to change the number of pages displayed on each side of the current page

                        int startPage = Math.Max(1, Math.Min(current - halfWindowSize, ViewBag.TotalPage - 4)); // Changed ViewBag.maxpage to ViewBag.TotalPage
                        int endPage = Math.Min(ViewBag.TotalPage, startPage + 4); // Changed ViewBag.maxpage to ViewBag.TotalPage

                        if (ViewBag.page == 1)
                        {
                            <li class="page-item disabled"><a class="page-link" href="@Url.Content(PPath + 1)">首頁</a></li>
                            <li class="page-item disabled"><a class="page-link" href="@Url.Content(PPath + previous)">上一頁</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Content(PPath + 1)">首頁</a></li>
                            <li class="page-item"><a class="page-link" href="@Url.Content(PPath + previous)">上一頁</a></li>
                        }

                        for (int i = startPage; i <= endPage; i++)
                        {
                            if (i == ViewBag.page)
                            {
                                <li class="page-item active"><a class="page-link" href="@Url.Content(PPath + i)">@i</a></li>
                            }
                            else
                            {
                                <li class="page-item"><a class="page-link" href="@Url.Content(PPath + i)">@i</a></li>
                            }
                        }

                        if (ViewBag.page == ViewBag.TotalPage)
                        {
                            <li class="page-item disabled"><a class="page-link" href="@Url.Content(PPath + next)">下一頁</a></li>
                            <li class="page-item disabled"><a class="page-link" href="@Url.Content(PPath + ViewBag.TotalPage)">末頁</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Content(PPath + next)">下一頁</a></li>
                            <li class="page-item"><a class="page-link" href="@Url.Content(PPath + ViewBag.TotalPage)">末頁</a></li>
                        }
                    }
                }
            </ul>
        </nav>


        <table class="table table-hover">
            <thead class="thead-dark">
                <tr>
                    <th>
                        序
                    </th>
                    <th>
                        訂單編號
                    </th>
                    <th>
                        @* @Html.DisplayNameFor(model => model.MemberId) *@訂購人
                    </th>
                    <th>
                        下訂日期
                    </th>
                    @*             <th>
                    @Html.DisplayNameFor(model => model.ShipId)
                    </th>
                    <th>
                    @Html.DisplayNameFor(model => model.PayId)
                    </th> *@
                    <th>
                        @* @Html.DisplayNameFor(model => model.StateId) *@目前狀態
                    </th>
                    @*             <th>
                    @Html.DisplayNameFor(model => model.ShipDate)
                    </th>
                    <th>
                    @Html.DisplayNameFor(model => model.DeliveryDate)
                    </th> *@
                    <th>訂單詳細</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int count = 0;
                    if (ViewBag.page != null)
                    {
                        count = (ViewBag.page - 1) * ViewBag.pgsize;
                    }
                    foreach (var item in Model)
                    {
                        count++;
                        <tr class="table-info">
                            <td>
                                @count
                            </td>
                            <td>
                                @item.OrderDate.ToString("yyyyMMdd")@item.OrderId.ToString()
                                <input type="hidden" value="@item.OrderId" />
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Member.MemberName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OrderDate)
                            </td>
                            <td style="display:none;">
                                @Html.DisplayFor(modelItem => item.Ship.ShipName)
                            </td>
                            <td style="display:none;">
                                @Html.DisplayFor(modelItem => item.Pay.PayName)
                            </td>
                            <td>
                                @{
                                    @*Html.DisplayFor(modelItem => item.State.StateName)*@
                                    //1.順利送達 2.轉運中 3.配送中 4.配送中(當日) 5.取件中 6.已集貨 7.取消取件 8.未順利取件 9.暫置營業所 10.調查處理中 11.不在家 12.公司行號休息
                                    if (item.StateId == 1)
                                    {
                                        <span class="badge badge-success" style="font-size:large;">@item.State.StateName</span>
                                    }
                                    else if (item.StateId == 2)
                                    {
                                        <span class="badge badge-warning" style="font-size:large;">@item.State.StateName</span>
                                    }
                                    else if (item.StateId == 3)
                                    {
                                        <span class="badge badge-warning" style="font-size:large;">@item.State.StateName</span>
                                    }
                                    else if (item.StateId == 4)
                                    {
                                        <span class="badge badge-warning" style="font-size:large;">@item.State.StateName</span>
                                    }
                                    else if (item.StateId == 5)
                                    {
                                        <span class="badge badge-warning" style="font-size:large;">@item.State.StateName</span>
                                    }
                                    else if (item.StateId == 6)
                                    {
                                        <span class="badge badge-warning" style="font-size:large;">@item.State.StateName</span>
                                    }
                                    else if (item.StateId == 7)
                                    {
                                        <span class="badge badge-danger" style="font-size:large;">@item.State.StateName</span>
                                    }
                                    else if (item.StateId == 8)
                                    {
                                        <span class="badge badge-danger" style="font-size:large;">@item.State.StateName</span>
                                    }
                                    else if (item.StateId == 9)
                                    {
                                        <span class="badge badge-danger" style="font-size:large;">@item.State.StateName</span>
                                    }
                                    else if (item.StateId == 10)
                                    {
                                        <span class="badge badge-danger" style="font-size:large;">@item.State.StateName</span>
                                    }
                                    else if (item.StateId == 11)
                                    {
                                        <span class="badge badge-danger" style="font-size:large;">@item.State.StateName</span>
                                    }
                                    else if (item.StateId == 12)
                                    {
                                        <span class="badge badge-danger" style="font-size:large;">@item.State.StateName</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-secondary" style="font-size:large;">@item.State.StateName</span>

                                    }
                                }
                            </td>
                            @*             <td>
                    @Html.DisplayFor(modelItem => item.ShipDate)
                    </td>*@
                            <td style="display:none;">
                                @Html.DisplayFor(modelItem => item.Member.MemberAddress)
                            </td>
                            <td style="display:none;">
                                @Html.DisplayFor(modelItem => item.DeliveryDate)
                            </td>
                            <td>
                                <a onclick="DetailTogget(this)" class="btn btn-info" data-toggle="modal" data-target="#modalDetail">
                                    <i class="fas fa-info-circle"></i>
                                </a>
                                @*                 @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ }) *@
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        <nav aria-label="Page navigation example" style="margin-top:1em;">
            <ul class="pagination pagination-sm">
                @{
                    if (ViewBag.page == null)
                    {

                    }

                    else
                    {
                        string PPath = "~/Admin/Order?page=";
                        int previous = ViewBag.page - 1;
                        int next = ViewBag.page + 1;
                        int current = ViewBag.page;

                        int halfWindowSize = 2; // Adjust this value to change the number of pages displayed on each side of the current page

                        int startPage = Math.Max(1, Math.Min(current - halfWindowSize, ViewBag.TotalPage - 4)); // Changed ViewBag.maxpage to ViewBag.TotalPage
                        int endPage = Math.Min(ViewBag.TotalPage, startPage + 4); // Changed ViewBag.maxpage to ViewBag.TotalPage

                        if (ViewBag.page == 1)
                        {
                            <li class="page-item disabled"><a class="page-link" href="@Url.Content(PPath + 1)">首頁</a></li>
                            <li class="page-item disabled"><a class="page-link" href="@Url.Content(PPath + previous)">上一頁</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Content(PPath + 1)">首頁</a></li>
                            <li class="page-item"><a class="page-link" href="@Url.Content(PPath + previous)">上一頁</a></li>
                        }

                        for (int i = startPage; i <= endPage; i++)
                        {
                            if (i == ViewBag.page)
                            {
                                <li class="page-item active"><a class="page-link" href="@Url.Content(PPath + i)">@i</a></li>
                            }
                            else
                            {
                                <li class="page-item"><a class="page-link" href="@Url.Content(PPath + i)">@i</a></li>
                            }
                        }

                        if (ViewBag.page == ViewBag.TotalPage)
                        {
                            <li class="page-item disabled"><a class="page-link" href="@Url.Content(PPath + next)">下一頁</a></li>
                            <li class="page-item disabled"><a class="page-link" href="@Url.Content(PPath + ViewBag.TotalPage)">末頁</a></li>
                        }
                        else
                        {
                            <li class="page-item"><a class="page-link" href="@Url.Content(PPath + next)">下一頁</a></li>
                            <li class="page-item"><a class="page-link" href="@Url.Content(PPath + ViewBag.TotalPage)">末頁</a></li>
                        }
                    }
                }
            </ul>
        </nav>

    </div>
</div>

@* ---詳細彈窗開始--- *@
<div class="modal fade" id="modalDetail" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">訂單明細</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <!--Body-->
            <div class="modal-body">

                @*訂單詳細窗口*@
                <ul>
                    <li>訂單編號</li>
                    <li>下訂日期</li>
                    <li>訂購人</li>
                    <li>訂單狀態</li>
                    <li>配送地址</li>
                    <li>配送方式</li>
                    <li>付款方式</li>
                    <li>預計到達日期</li>
                </ul>

                <!--Footer-->
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-primary" data-dismiss="modal">關閉</button>
                </div>
            </div>
        </div>
    </div>
</div>
@* ---詳細彈窗結束--- *@

<script>
    function get(element) {
        let par = element.parentNode.parentNode;
        var hidd = par.querySelector('input[type="hidden"]');
        console.log(hidd.value);
        del(hidd.value);

    }

    const choose = document.getElementById("choosebtn");
    const choost = document.getElementById("choost");
    choose.addEventListener("click", () => {
        const choose = document.getElementById("choose");
        if (choose.style.display == "none") {
            choose.style.display = "block";
            choost.classList.add('dropup');
        }
        else {
            choose.style.display = "none";
            choost.classList.remove('dropup');
        }
    });

    //主畫面按下去要彈框框的事件
    function DetailTogget(element) {
        showTogget(element)
    }

    //把OrderDetail PartalView印到彈出來的視窗
    function showTogget(element) {

        const id  = element.parentNode.parentNode.querySelector('input[type="hidden"]').value;
        const url = `https://localhost:7203/admin/OrderDetail/${id}`;

        fetch(url)
            .then((response) => {
                return response.text();
            })
            .then((data) => {
                const modalBody = document.querySelector(".modal-body");
                modalBody.innerHTML = data;
            })
            .catch((err) => {
                console.log(err);
            });

    }

    //刪除按鈕的事件
    async function del(id) {
        const result = await Swal.fire({
            title: "確定要刪除嗎？",
            text: "此步驟將無法復原！",
            icon: "warning",
            showCancelButton: true,
            cancelButtonText: "取消",
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "確定刪除"
        });

        if (result.isConfirmed) {

            const response = await fetch(`https://localhost:7078/api/Order/${id}`, {
                method: 'DELETE'
            });
            let data = await response.status
            if (data = 200) {
                Swal.fire({
                    title: "刪除成功!",
                    text: data,
                    icon: "success",
                    showConfirmButton: false,
                    timer: 1500
                });
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "有錯誤發生!"
                });
            }
            research()
        }

    }

</script>