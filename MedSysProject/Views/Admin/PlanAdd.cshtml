@model IEnumerable<MedSysProject.Models.Plan>

@{
    ViewData["Title"] = "PlanAdd";
    Layout = "_Layout_Admin2";
}

@* 這邊是確保左側邊欄的目前區域標亮 *@
@* ---------------------------------------------- *@
<script>
    const PlanAdd = document.getElementById("li-PlanAdd");
    const Index = document.getElementById("li-index");
    PlanAdd.className = "nav-item active";
    Index.className = "nav-item";
</script>
@* ------------------------------------- *@

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">方案調整</h6>
    </div>
    <div class="card-body">

        <div class="plan-container mb-3">
            <ul class="nav nav-pills" id="myTab" role="tablist">
                <li class="nav-item">
                    <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">方案管理</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">項目管理</a>
                </li>
            </ul>
        </div>

        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">

                <p>
                    <a class="btn btn-success" data-toggle="modal" data-target="#modalCreate">
                        <i class="fas fa-plus"></i>
                    </a>
                </p>
                <table class="table">
                    <thead class="thead-dark">
                        <tr>
                            <th>
                                序
                            </th>
                            <th>
                                方案名稱
                            </th>
                            <th>
                                方案描述
                            </th>
                            <th>方案圖片</th>
                            <th>執行動作</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int count = 0;
                            foreach (var item in Model)
                            {
                                count++;
                                <tr class="table-warning">
                                    <td>
                                        @count
                                        <input type="hidden" value="@item.PlanId" />
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PlanName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.PlanDescription)
                                    </td>
                                    <td>
                                        @{
                                            if (item.PlanImg != null)
                                            {
                                                <img src="@item.PlanImg" width="100" height="100" />
                                            }
                                        }

                                    </td>
                                    <td>
                                        <a onclick="updata(this)" class="btn btn-primary" data-toggle="modal" data-target="#modalEdit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a class="btn btn-danger" id="btnDel" onclick="get(this)">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                <p>
                    <a class="btn btn-success" data-toggle="modal" data-target="#modalCreateprj">
                        <i class="fas fa-plus"></i>
                    </a>
                </p>
                <table class="table">
                    <thead class="thead-dark">
                        <tr>
                            <th>
                                序
                            </th>
                            <th>
                                項目名稱
                            </th>
                            <th>
                                項目價格
                            </th>
                            <th>執行動作</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            int countPj = 0;
                            foreach (var item in ViewBag.Project)
                            {
                                countPj++;
                                <tr class="table-warning">
                                    <td>
                                        @countPj
                                        <input type="hidden" value="@item.ProjectId" />
                                    </td>
                                    <td>
                                        @item.ProjectName
                                    </td>
                                    <td>
                                        @item.ProjectPrice
                                    </td>
                                    <td>
                                        <a onclick="updataprj(this)" class="btn btn-primary" data-toggle="modal" data-target="#modalEditprj">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a class="btn btn-danger" id="btnDel" onclick="getprj(this)">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@* ---新增彈窗開始--- *@
<div class="modal fade" id="modalCreate" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">新增方案</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <!--Body-->
            <div class="modal-body">
                <form id="myCreatedataform" novalidate class="needs-validation">
                    <div class="row">
                        <div class="col-md-10">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <div class="form-group">
                                <input type="hidden" id="CinputId" value="" name="CPlanId" />
                                <label class="control-label">方案名稱</label>
                                <input class="form-control" id="CinputName" name="CPlanName" required />
                                <div class="invalid-feedback">請輸入方案名稱</div>
                            </div>

                            <div class="form-group">
                                <label class="control-label">方案描述</label>
                                <textarea class="form-control" id="CinputDescription" name="CPlanDescription" rows="3" required></textarea>
                                <div class="invalid-feedback">請輸入方案描述</div>
                            </div>

                            <div class="form-group">
                                <label class="control-label">方案圖片</label>
                                <input type="file" class="form-control" id="CinputImage" name="CPlanImage" required />
                                <div class="invalid-feedback">請輸入方案圖片</div>
                                <img src="" id="CimgPreview" />
                            </div>


                            <div class="form-group" id="Cprjchoose">
                                <label class="control-label">方案選擇</label>
                                <br />
                                @{
                                    foreach (var item in ViewBag.Project)
                                    {
                                        <div class="form-check-inline" style="margin-left:1em;">
                                            <input class="form-check-input pjlist" type="checkbox" name="Cprjchk" value="@item.ProjectId" id="@item.ProjectId">
                                            <label class="form-check-label" for="@item.ProjectId">
                                                @item.ProjectName
                                            </label>

                                        </div>

                                        <br />
                                    }
                                }
                                <a class="btn btn-link" onclick="Caddcheck()"><i class="fas fa-plus"></i> 新增其他項目</a>
                                <div class="invalid-feedback">請至少勾選一項</div>
                            </div>

                        </div>
                    </div>
                </form>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-primary" id="CancelPlanCreate" data-dismiss="modal">取消</button>
                    <button type="button" class="btn btn-success" id="Cbtn">確定新增</button>
                    <button class="btn btn-dark" id="demoPlanCreate">DEMO</button>
                </div>
            </div>
        </div>
    </div>
</div>
@* ---新增彈窗結束--- *@

@* ---修改彈窗開始--- *@
<div class="modal fade" id="modalEdit" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">修改方案</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <!--Body-->
            <div class="modal-body">
                <form id="myUpdataform" novalidate class="needs-validation">
                    <div class="row">
                        <div class="col-md-10">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <div class="form-group">
                                <input type="hidden" id="inputId" value="" name="PlanId" />
                                <label class="control-label">方案名稱</label>
                                <input class="form-control" id="inputName" name="PlanName" required />
                                <div class="invalid-feedback">請輸入方案名稱</div>
                            </div>

                            <div class="form-group">
                                <label class="control-label">方案描述</label>
                                <textarea class="form-control" id="inputDescription" name="PlanDescription" rows="3" required></textarea>
                                <div class="invalid-feedback">請輸入方案描述</div>
                            </div>

                            <div class="form-group" id="prjchoose">
                                <label class="control-label">方案選擇</label>
                                <br />
                                @{
                                    foreach (var item in ViewBag.Project)
                                    {
                                        <div class="form-check-inline" style="margin-left:1em;">
                                            <input class="form-check-input" type="checkbox" name="prjchk" value="@item.ProjectId" id="@item.ProjectId">
                                            <label class="form-check-label" for="@item.ProjectId">
                                                @item.ProjectName
                                            </label>
                                        </div>

                                        <br />
                                    }
                                }
                                <a class="btn btn-link" onclick="addcheck()"><i class="fas fa-plus"></i> 新增其他項目</a>
                                <div class="invalid-feedback">請至少勾選一項</div>
                            </div>

                        </div>
                    </div>
                </form>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-primary" id="CancelPlanCreate" data-dismiss="modal">取消</button>
                    <button type="button" class="btn btn-success" onclick="putdata2()" id="Cbtn">確定修改</button>
                </div>
            </div>
        </div>
    </div>
</div>
@* ---修改彈窗結束--- *@

@* ---prj新增彈窗開始--- *@
<div class="modal fade" id="modalCreateprj" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">新增項目</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <!--Body-->
            <div class="modal-body">
                <form id="myCreatedataformprj" novalidate class="needs-validation">
                    <div class="row">
                        <div class="col-md-10">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <div class="form-group">
                                <input type="hidden" id="CinputIdprj" value="" name="CProjectId" />
                                <label class="control-label">項目名稱</label>
                                <input class="form-control" id="CinputNameprj" name="CProjectName" required />
                                <div class="invalid-feedback">請輸入項目名稱</div>
                            </div>

                            <div class="form-group">
                                <label class="control-label">項目價格</label>
                                <input class="form-control" id="CinputPriceprj" name="CProjectPrice" rows="3" required></input>
                                <div class="invalid-feedback">請輸入項目價格</div>
                            </div>

                        </div>
                    </div>
                </form>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-primary" id="CancelProjectCreate" data-dismiss="modal">取消</button>
                    <button type="button" class="btn btn-success" id="Cbtnprj" onclick="updataprj()">確定新增</button>
                    <button class="btn btn-dark" id="demoProjectCreate">DEMO</button>
                </div>
            </div>
        </div>
    </div>
</div>
@* ---prj新增彈窗結束--- *@

@* ---prj修改彈窗開始--- *@
<div class="modal fade" id="modalEditprj" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <!--Header-->
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">修改項目</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <!--Body-->
            <div class="modal-body">
                <form id="myEditdataformprj" novalidate class="needs-validation">
                    <div class="row">
                        <div class="col-md-10">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                            <div class="form-group">
                                <input type="hidden" id="inputIdprj" value="" name="ProjectId" />
                                <label class="control-label">項目名稱</label>
                                <input class="form-control" id="inputNameprj" name="ProjectName" required />
                                <div class="invalid-feedback">請輸入項目名稱</div>
                            </div>

                            <div class="form-group">
                                <label class="control-label">項目價格</label>
                                <input class="form-control" id="inputPriceprj" name="ProjectPrice" rows="3" required></input>
                                <div class="invalid-feedback">請輸入項目價格</div>
                            </div>

                        </div>
                    </div>
                </form>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-primary" id="CancelProjectEdit" data-dismiss="modal">取消</button>
                    <button type="button" class="btn btn-success" id="btnprj" onclick="putdataprj2()">確定修改</button>
                </div>
            </div>
        </div>
    </div>
</div>
@* ---prj修改彈窗結束--- *@

<script src="/vendor/jquery/jquery.min.js"></script>
<script>
    function Caddcheck() {
        // Find the last checkbox within the form group
        var Cprjchoose = document.getElementById('Cprjchoose')
        console.log(Cprjchoose);

        var lastbox = $('#Cprjchoose').find('input[type="checkbox"]').last()[0];
        console.log(lastbox);

        // Determine the last ID used
        var lastId = lastbox.id;
        console.log(lastId);

        // Increment the ID for the new checkbox
        var newId = parseInt(lastId) + 1;

        // Create a new checkbox element
        var newCheckbox = document.createElement('div');
        newCheckbox.className = 'form-check-inline';
        newCheckbox.style.marginLeft = '1em';
        newCheckbox.innerHTML = `
                                                                <input class="form-check-input pjlist" type="checkbox" name="Cprjchk" value="${newId}" id="${newId}">
                                                                <label class="form-check-label" for="${newId}">
                                                                    <input type="text" class="form-control" name="Cprjtxt" placeholder="自定義項目...">
                                                                </label>
                                                            `;

        // Create a new line break element
        var lineBreak = document.createElement('br');

        // Append the new checkbox and line break to the existing form group
        var formGroup = document.getElementById('Cprjchoose');
        formGroup.appendChild(newCheckbox);
        formGroup.appendChild(lineBreak);
    }

    function addcheck() {
        // Find the last checkbox within the form group
        var prjchoose = document.getElementById('prjchoose')
        console.log(prjchoose);

        var lastbox = $('#prjchoose').find('input[type="checkbox"]').last()[0];
        console.log(lastbox);

        // Determine the last ID used
        var lastId = lastbox.id;
        console.log(lastId);

        // Increment the ID for the new checkbox
        var newId = parseInt(lastId) + 1;

        // Create a new checkbox element
        var newCheckbox = document.createElement('div');
        newCheckbox.className = 'form-check-inline';
        newCheckbox.style.marginLeft = '1em';
        newCheckbox.innerHTML = `
                                                                    <input class="form-check-input pjlist" type="checkbox" name="prjchk" value="${newId}" id="${newId}">
                                                                    <label class="form-check-label" for="${newId}">
                                                                        <input type="text" class="form-control" name="prjtxt" placeholder="自定義項目...">
                                                                    </label>
                                                                `;

        // Create a new line break element
        var lineBreak = document.createElement('br');

        // Append the new checkbox and line break to the existing form group
        var formGroup = document.getElementById('prjchoose');
        formGroup.appendChild(newCheckbox);
        formGroup.appendChild(lineBreak);
    }

    document.querySelector("#Cbtn").addEventListener("click", () => {
        console.log("hello")
        let createform = document.querySelector("#myCreatedataform");
        let form = new FormData(createform);
        create(form);

    })

    async function create(form) {
        let url = `https://localhost:7078/api/Plans`;
        const response = await fetch(url, {
            method: 'POST',
            body: form,
        });
        const state = await response.status;
        if (response.ok) {
            UploadImg(form);
            Projectcreate(form);

        } else {
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "有錯誤發生!"
            });
        }
    }

    //當選擇圖片後 預覽圖片
    document.querySelector("#CinputImage").onchange = function (e) {
        let reader = new FileReader();
        reader.onload = function () {
            document.querySelector("#CimgPreview").src = reader.result;
        }
        reader.readAsDataURL(e.target.files[0]);
    }

    //接著上傳圖片
    async function UploadImg() {
        var fileInput = document.getElementById('CinputImage');
        var file = fileInput.files[0];
        var myForm = document.getElementById("myCreatedataform");
        var data = new FormData(myForm);
        console.log(data)

        const response = await fetch('https://localhost:7203/api/Plan', {
            method: 'POST',
            body: data
        });
        const res = await response.text();
        console.log(res);


    }

    document.querySelector("#Cbtnprj").addEventListener("click", () => {
        console.log("hello")
        let createform = document.querySelector("#myCreatedataformprj");
        let form = new FormData(createform);
        createPrj(form);

    })

    async function Projectcreate(form) {
        console.log(form)
        let url = `https://localhost:7078/api/Projects`;
        const response = await fetch(url, {
            method: 'POST',
            body: form,
        });
        const state = await response.status;
        if (response.ok) {

            createRef(form);

            research();

        } else {
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "有錯誤發生!"
            });
        }
    }


    async function createPrj(form) {
        console.log(form)
        let url = `https://localhost:7078/api/Projects/prj`;
        const response = await fetch(url, {
            method: 'POST',
            body: form,
        });
        const state = await response.status;
        if (response.ok) {

            $('#modalCreateprj').modal('hide');

            Swal.fire({
                title: "新增成功!",
                text: state,
                icon: "success",
                showConfirmButton: false,
                timer: 1500
            });

            research();

        } else {
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "有錯誤發生!"
            });
        }
    }

    async function createRef(form) {
        let url = `https://localhost:7078/api/PlanRefs`;
        const response = await fetch(url, {
            method: 'POST',
            body: form,
        });
        const state = await response.status;
        if (response.ok) {
            Swal.fire({
                title: "新增成功!",
                text: state,
                icon: "success",
                showConfirmButton: false,
                timer: 1500
            });

            research();
        } else {
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "有錯誤發生!"
            });
        }
    }

    const id = document.querySelector("Planid");
    function get(element) {
        let par = element.parentNode.parentNode;
        var hidd = par.querySelector('input[type="hidden"]');
        console.log(hidd.value);
        del(hidd.value);

    }

    const idprj = document.querySelector("Projectid");
    function getprj(element) {
        let par = element.parentNode.parentNode;
        var hidd = par.querySelector('input[type="hidden"]');
        console.log(hidd.value);
        delprj(hidd.value);
    }


    //主畫面按下去要彈框框的事件
    function updata(element) {
        showTogget(element)
    }

    //把資料印到彈出來的視窗(去掉空白)
    function showTogget(element) {
        let par = element.closest("tr");
        let tds = par.getElementsByTagName("td");

        let tdid = tds[0].querySelector('input[type="hidden"]');
        let tdname = tds[1].innerHTML;
        let tddescription = tds[2].innerHTML;

        document.getElementById("inputId").value = tdid.value;
        document.getElementById("inputName").value = tdname.trim();
        document.getElementById("inputDescription").value = tddescription.trim();


        fetch(`https://localhost:7078/api/PlanRefs/get/${tdid.value}`)
            .then((response) => {
                return response.json();
            })
            .then((data) => {
                console.log("aaxxx");
                console.log(data);
                // 抓projectId
                let prjId = [];

                data.forEach((item) => {
                    prjId.push(item.projectId);
                });

                console.log("ProjectIds:", prjId);

                // 抓checkbox
                let prjChk = document.querySelectorAll('input[name="prjchk"]');
                console.log(prjChk);

                prjChk.forEach((item) => {
                    if (prjId.includes(parseInt(item.value))) {
                        item.checked = true;
                    } else {
                        item.checked = false;
                    }
                });
            })
            .catch((err) => {
                console.log(err);
            });


    }


    //項目類主畫面按下去要彈框框的事件
    function updataprj(element) {
        showToggetprj(element)
    }

    //把項目資料印到彈出來的視窗(去掉空白)
    function showToggetprj(element) {
        let par = element.closest("tr");
        let tds = par.getElementsByTagName("td");

        let tdid = tds[0].querySelector('input[type="hidden"]');
        let tdname = tds[1].innerHTML;
        let tdprice = tds[2].innerHTML;

        document.getElementById("inputIdprj").value = tdid.value;
        document.getElementById("inputNameprj").value = tdname.trim();
        document.getElementById("inputPriceprj").value = tdprice.trim();

    }

    async function putdata2() {
        let id = document.getElementById("inputId").value;
        console.log(id)
        let apiurl = `https://localhost:7078/api/Plans/Up/${id}`;
        var myForm = document.getElementById("myUpdataform");
        var data = new FormData(myForm);
        Projectcreate(data);
        const response = await fetch(apiurl, {
            method: 'PUT',
            body: data
        });
        const status = await response.status;
        if (response.ok) {
            putdataRef2();
        }
        else {
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "有錯誤發生!"
            });
        }
    }

    async function putdataRef2() {
        let id = document.getElementById("inputId").value;
        console.log(id)
        let apiurl = `https://localhost:7078/api/PlanRefs/Up/${id}`;
        var myForm = document.getElementById("myUpdataform");
        var data = new FormData(myForm);
        const response = await fetch(apiurl, {
            method: 'PUT',
            body: data
        });
        const status = await response.status;
        if (response.ok) {

            $('#modalEdit').modal('hide');

            Swal.fire({
                title: "修改成功!",
                text: status,
                icon: "success",
                showConfirmButton: false,
                timer: 1500
            });



            research();
        }
        else {
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "有錯誤發生!"
            });
        }
    }

    async function putdataprj2() {
        let id = document.getElementById("inputIdprj").value;
        console.log(id)
        let apiurl = `https://localhost:7078/api/Projects/prj/${id}`;
        var myForm = document.getElementById("myEditdataformprj");
        var data = new FormData(myForm);
        const response = await fetch(apiurl, {
            method: 'PUT',
            body: data
        });
        const status = await response.status;
        if (response.ok) {

            $('#modalEditprj').modal('hide');

            Swal.fire({
                title: "修改成功!",
                text: status,
                icon: "success",
                showConfirmButton: false,
                timer: 1500
            });



            research();
        }
        else {
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "有錯誤發生!"
            });
        }
    }

    // document.addEventListener("keydown", (event) => {
    //     if (event.key == "Enter") {
    //         console.log(document.querySelectorAll(".pjlist"));
    //         if (document.querySelectorAll(".pjlist").forEach((item) => {
    //             if (item.checked == true) {
    //                 console.log(item);
    //             }
    //         })
    //         }

    // })



    async function del(id) {
        const result = await Swal.fire({
            title: "確定要刪除嗎？",
            text: "此步驟將無法復原！",
            icon: "warning",
            showCancelButton: true,
            cancelButtonText: "取消",
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "確定刪除"
        });

        if (result.isConfirmed) {

            const response = await fetch(`https://localhost:7078/api/Plans/${id}`, {
                method: 'DELETE'
            });
            let data = await response.status
            if (response.ok) {
                Swal.fire({
                    title: "刪除成功!",
                    text: data,
                    icon: "success",
                    showConfirmButton: false,
                    timer: 1500
                });
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "有錯誤發生!"
                });
            }
            research()
        }
    }

    async function delprj(idprj) {
        const result = await Swal.fire({
            title: "確定要刪除嗎？",
            text: "此步驟將無法復原！",
            icon: "warning",
            showCancelButton: true,
            cancelButtonText: "取消",
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "確定刪除"
        });

        if (result.isConfirmed) {

            const response = await fetch(`https://localhost:7078/api/Projects/${idprj}`, {
                method: 'DELETE'
            });
            let data = await response.status
            if (response.ok) {
                Swal.fire({
                    title: "刪除成功!",
                    text: data,
                    icon: "success",
                    showConfirmButton: false,
                    timer: 1500
                });
            } else {
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "有錯誤發生!"
                });
            }
            research()
        }
    }

    //新增其他項目
    // function Caddprj() {
    //     var choose = document.getElementById("Cprjchoose");
    //     console.log("------------" + choose + "------------")
    //     //找到choose裡面的最後一個checkbox的value

    //     let prjid = choose.lastChild.querySelector('input[type="checkbox"]').value; //找到最後一個checkbox的value
    //     console.log(prjid)
    //     //插入新的chkbox，value為最後一個的value+1
    //     const newprjid = parseInt(prjid) + 1;
    //     console.log(newprjid)
    //     choose.innerHTML += `                                        <div class="form-check-inline" style="margin-left:1em;">
    //                                                                                                                 <input class="form-check-input" type="checkbox" name="prjchk" value="${newprjid}" id="${newprjid}">
    //                                                                                                             <label class="form-check-label" for="${newprjid}">
    //                                                                                                         <input class="form-control" id="CinputName" name="CPlanName" required />
    //                                                                                                     </label>
    //                                                                                                 </div>

    //                                                                                                 <br />`;

    // }

    async function research() {
        await new Promise(resolve => setTimeout(resolve, 1600));
        window.location.reload();
    }

    $("#demoPlanCreate").click(function () {
        $("#CinputId").val("");
        $("#CinputName").val("超級快樂方案");
        $("#CinputDescription").val("方案的描述");

    });

    $("#CancelPlanCreate").click(function () {
        $("#CinputId").val("");
        $("#CinputName").val("");
        $("#CinputDescription").val("");
    });

    $("#demoProjectCreate").click(function () {
        $("#CinputIdprj").val("");
        $("#CinputNameprj").val("超級快樂項目");
        $("#CinputPriceprj").val("1000");
    });

    $("#CancelProjectCreate").click(function () {
        $("#CinputIdprj").val("");
        $("#CinputNameprj").val("");
        $("#CinputPriceprj").val("");
    });
</script>
