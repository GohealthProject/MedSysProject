@using System.Text.Json;
@model List<MedSysProject.Models.Blog>

@{
    Layout = "~/Views/Shared/_Layout_Blogs.cshtml";
}


<main id="main">
    @{
        int? memLogIn = 0;
        if (Context.Session.Keys.Contains(CDictionary.SK_MEMBER_LOGIN))
        {
            string Json = Context.Session.GetString(CDictionary.SK_MEMBER_LOGIN);
            Member whoLogIn = JsonSerializer.Deserialize<Member>(Json);
            memLogIn = whoLogIn.MemberId;
        }
            // else
            // {
        //     memLogIn = null;
        // }
    }
    @{
        <section class="single-post-content">
            <div class="container">
                <div class="row">
                    <div class="col-md-9 post-content" @* data-aos="fade-up" *@>

                        <!-- ======= Single Post Content ======= -->
                        <div class="single-post">
                            <div class="post-meta"><span class="date"></span> <span class="mx-1">&bullet;</span> <span>@Model[0].CreatedAt</span></div>
                            <h1 class="mb-5">@Model[0].Title</h1>
                            @{
                                if (Model[0].BlogImage != null)
                                {
                                    <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model[0].BlogImage)"
                                         alt=""
                                         class="img-fluid" />
                                }
                            }
                            @Html.Raw(Model[0].Content)
                        </div><!-- End Single Post Content -->
                        <!-- ======= Comments ======= -->
                        <!--所有的留言裝在一個div class="Comments"中，跟single-post同一個層級-->

                        <div class="Comments" id="putIn">
                        </div>
                        <!-- End Comments -->
                        <!-- ======= Comments Form ======= -->
                        <div class="row justify-content-center mt-5">
                            <div class="col-lg-12">
                                <h5 class="comment-title">留言</h5>
                                <div class="row">
                                    <div class="col-12 mb-3">
                                        <textarea class="form-control" id="comment-message" placeholder="說些什麼吧..." cols="30" rows="1"></textarea>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- End Comments Form -->
                    </div>
                    <div class="col-md-3">
                        <!-- ======= 側面欄位丟這 ======= -->
                        <div class="aside-block">

                            <ul class="nav nav-pills custom-tab-nav mb-4" id="pills-tab" role="tablist">
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link active" id="pills-popular-tab" data-bs-toggle="pill" data-bs-target="#pills-popular" type="button" role="tab" aria-controls="pills-popular" aria-selected="true" onclick="loadSidePopular()">最多觀看</button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="pills-latest-tab" data-bs-toggle="pill" data-bs-target="#pills-latest" type="button" role="tab" aria-controls="pills-latest" aria-selected="false" onclick="loadSideLatest()">最新貼文</button>
                                </li>
                                <li class="nav-item" role="presentation">
                                    <button class="nav-link" id="pills-latest-tab" data-bs-toggle="pill" data-bs-target="#pills-thisCat" type="button" role="tab" aria-controls="pills-latest" aria-selected="false" onclick="loadSideThisCat()">相關貼文</button>
                                </li>
                            </ul>

                            <div class="tab-content" id="pills-tabContent">
                                <div class="tab-pane fade show active" id="pills-popular" role="tabpanel" aria-labelledby="pills-popular-tab">
                                </div>
                                <div class="tab-pane fade show active" id="pills-latest" role="tabpanel" aria-labelledby="pills-popular-tab">
                                </div>
                                <div class="tab-pane fade show active" id="pills-thisCat" role="tabpanel" aria-labelledby="pills-popular-tab">
                                </div>

                            </div>
                        </div>
                        <div class="aside-block">
                            <h3 class="aside-title">文章類別</h3>
                            <ul class="aside-links list-unstyled">
                                <li><a href="@Url.Content("~/Blogs/SelectBlogCategory")?CategoryID=1"><i class="bi bi-chevron-right"></i> 活動快訊</a></li>
                                <li><a href="@Url.Content("~/Blogs/SelectBlogCategory")?CategoryID=2"><i class="bi bi-chevron-right"></i> 醫療新知</a></li>
                                <li><a href="@Url.Content("~/Blogs/SelectBlogCategory")?CategoryID=3"><i class="bi bi-chevron-right"></i> 名人分享會</a></li>
                                <li><a href="@Url.Content("~/Blogs/SelectBlogCategory")?CategoryID=4"><i class="bi bi-chevron-right"></i> 媒體報導</a></li>
                                <li><a href="@Url.Content("~/Blogs/SelectBlogCategory")?CategoryID=5"><i class="bi bi-chevron-right"></i> 企業責任</a></li>
                            </ul>
                        </div>
                        <!-- End Categories -->
                    </div>
                </div>
            </div>
        </section>
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop" style="visibility: hidden;">
        </button>

        <!-- Modal -->
        <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="staticBackdropLabel">還沒登入嗎?</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="p-3 mb-5 mt-4 bg-white rounded">
                            <form method="post" action="/Accout/BlogLogIn" id="from" style="padding-top:0px;">
                                <div class="my-3 h3 mb-3 fw-normal">GO健康登入</div>

                                <div class="g_id_signin py-1" data-type="standard"></div>


                                @* <div class="fb-login-button py-1" data-max-rows="1" data-size="large" data-button-type="login_with" data-show-faces="false" data-auto-logout-link="true" data-use-continue-as="false" data-scope="public_profile,email" data-onlogin="checkLoginState();"></div> *@

                                <div class="d-flex justify-content-center">
                                    <button id="btnGoogleLogin" type="button" class="btn btn-danger w-100 py-2 mx-1"><i class="fab fa-google" style="font-size:larger;"></i></button>
                                    <button id="btnFacebookLogin" type="button" class="btn btn-primary w-100 py-2 mx-1"><i class="fab fa-facebook-f" style="font-size:larger;"></i></button>
                                    <button id="btnLineLogin" type="button" class="btn btn-success w-100 py-2 mx-1"><i class="fab fa-line" style="font-size:x-large;"></i></button>
                                </div>


                                <div class="mt-2 mx-2 title">或</div>

                                @*@Html.Raw(expired)
                            @Html.Raw(resetLogin)
                            @Html.Raw(loginfail)*@
                                <span class="text-danger">@Html.Raw(ViewBag.Msg)</span>
                                <div class="px-1 my-2 form-floating">
                                    <input type="text" class="form-control" id="hiddenBlogId" name="blogId" value="@Model[0].BlogId">
                                </div>

                                <div class="px-1 my-2 form-floating">
                                    <input type="text" class="form-control" id="txtAccout" name="txtEmail">
                                    <label for="inputName" class="form-label" name="txtEmail">電子信箱</label>
                                </div>
                                <div class="px-1 my-2 form-floating">

                                    <input type="Password" class="form-control" id="txtPassWord" name="txtPassWord">
                                    <label for="inputEmail" class="form-label" name="txtPassWord">密碼</label>

                                </div>
                                <div class="mb-3 px-3">
                                    <div class="form-check text-start my-3">
                                        <input class="form-check-input" type="checkbox" value="remember-me" id="flexCheckDefault">
                                        <label class="form-check-label" for="flexCheckDefault">
                                            記住我
                                        </label>
                                        @Html.ActionLink("註冊會員", "Register", "Accout", new { }, new { style = "margin-left:150px" })
                                        @Html.ActionLink("忘記密碼", "ForgetPassword", "Accout", new { }, new { style = "margin-left:10px" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="mb-3  col-5"></div>
                                    <div class="mb-1  col-12"><button id="buttonSubmit" type="submit" class="btn btn-success w-100 py-2">登入</button></div>
                                </div>
                                <div class="btn-group d-flex justify-content-center mt-3">
                                    <button id="testButtonA" type="button" class="btn btn-secondary w-100 py-2">DEMO1(功能)</button>
                                    <button id="testButtonB" type="button" class="btn btn-secondary w-100 py-2">DEMO2(註冊)</button>
                                    <button id="testButtonC" type="button" class="btn btn-secondary w-100 py-2">DEMO3(G)</button>
                                </div>
                                <div class="row">
                                    <div class="mb-1 mt-1 col-12"><a href="@Url.Content("~/admin")" id="adminButton" type="button" class="btn btn-dark w-100 py-2">系統後台</a></div>
                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary">Understood</button>
                    </div>
                </div>
            </div>
        </div>
    }
</main>
@section Scripts {
     <script>
        const btnGoogleLogin = document.querySelector('#btnGoogleLogin');
        const btnFacebookLogin = document.querySelector('#btnFacebookLogin');
        const btnLineLogin = document.querySelector('#btnLineLogin');


        $('#testLabel').css("font-size", "15px");
        $('#testButtonA').on('click', () => {
            $('#txtAccout').val('night90810@gmail.com');
            $('#txtPassWord').val('Test');
        });

        $('#testButtonB').on('click', () => {
            $('#txtAccout').val('jacky56542@gmail.com');
            $('#txtPassWord').val('Test');
        });

        $('#testButtonC').on('click', () => {
            $('#txtAccout').val('night90810@gmail.com');
            $('#txtPassWord').val('Test');
        });
        //全域變數 由Razor獲得
        let memberLogIn = @memLogIn;
        let blogId = @Model[0].BlogId;//可以直接塞razor?
        let commentTable = document.querySelector('#putIn');//留言板
        let modalShown = false; // 设置标志，表示模态窗口是否已经显示过
        let blogClassId = @Model[0].ArticleClassId;

        const InputTextArea = document.querySelector('#comment-message');//留言輸入方塊


        //限制貼文版面
        var postContentElements = document.getElementsByClassName('single-post');
        for (var i = 0; i < postContentElements.length; i++) {
            var images = postContentElements[i].getElementsByTagName('img');
            for (var j = 0; j < images.length; j++) {
                var image = images[j];
                var figure = document.createElement('figure');
                image.parentNode.insertBefore(figure, image);
                figure.appendChild(image);//有待研究，javascripts真的太不熟了
            }
        }



        InputTextArea.addEventListener('keydown', async function (event) {
            if (event.key === 'Enter' && !event.shiftKey) {
                event.preventDefault();//防止textarea換行
                if (memberLogIn === 0) {
                    const invisibleButton = document.querySelector('[data-bs-target="#staticBackdrop"]');
                    invisibleButton.dispatchEvent(new Event('click'));
                }
                const apiUrl = 'https://localhost:7078/api/Comments/memberAddComment';
                const data =
                {
                    BlogId: blogId,
                    MemberId: memberLogIn,
                    Content: InputTextArea.value
                };  
                const requestOption =
                {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                };
                try {
                    const response = await fetch(apiUrl, requestOption);
                    if (!response.ok) {
                        throw new Error('Network response was not ok.');
                    }

                    await refreshCommentTable();
                    InputTextArea.value = '';


                } catch (error) {
                    console.error('There was a problem saving the comment:', error);
                    // 處理錯誤
                }
            }
        });

        async function refreshCommentTable() {
            try {
                await loadPrimeComments();
                await processReplies();
                toggleLinkEvent();
                initButtons();

            } catch (error) { console.error('There was a problem refreshing the comment', error); }
        }

        document.addEventListener('DOMContentLoaded',() => {
            window.addEventListener('scroll', scrollHandler);
            refreshCommentTable();
            loadSidePopular();
        });




        //定義方法

        function scrollHandler() {
            const commentTablePosition = commentTable.getBoundingClientRect().top;
            const windowHeight = window.innerHeight || document.documentElement.clientHeight;

            if (commentTablePosition <= windowHeight && memberLogIn === 0 && !modalShown) {
                const invisibleButton = document.querySelector('[data-bs-target="#staticBackdrop"]');
                invisibleButton.dispatchEvent(new Event('click'));
                modalShown = true; //true，表示模态窗口已经显示过

                // 在条件满足时移除滚动事件监听器
                window.removeEventListener('scroll', scrollHandler);
            }
        }


        function initButtons() {
            let replyButtons = document.querySelectorAll('.replyBtn');//回覆按鈕
            console.log(replyButtons);
            replyButtons.forEach(function (rplyBtn) {
                rplyBtn.addEventListener('click', function (event) {
                    event.preventDefault();
                    const comment = rplyBtn.parentNode.parentNode;
                    console.log(comment);
                    const parentCommentId = comment.getAttribute('data-comment-id');
                    console.log(parentCommentId);//測試用，能抓到按鈕對應留言區塊
                    const replyFormWrap = comment.querySelector('.js-reply-form-wrap');
                    replyFormWrap.classList.add("active");
                    let inputReply = comment.querySelector('input.form-control[type="text"][placeholder="回覆..."]');
                    console.log(inputReply);
                    inputReply.addEventListener('keydown', async function (event) {
                        if (event.key === "Enter" && !event.shiftKey) {
                            console.log('回復訊息');
                            if (memberLogIn === 0) {
                                const invisibleButton = document.querySelector('[data-bs-target="#staticBackdrop"]');
                                invisibleButton.dispatchEvent(new Event('click'));
                            }
                            const apiUrl = 'https://localhost:7078/api/Comments/memberAddReply';
                            const data = {
                                BlogId: blogId,
                                MemberId: memberLogIn,
                                ParentCommentId: parentCommentId,
                                Content: inputReply.value
                            }
                            const requestOption =
                            {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify(data)
                            }
                            try {
                                const response = await fetch(apiUrl, requestOption);
                                if (!response.ok) {
                                    throw new Error('Network response was not ok.');
                                }
                                await refreshCommentTable();
                                inputReply.value = '';
                            }
                            catch (error) { console.error('There was a problem saving the comment:', error); }
                        }
                    });

                });
            });
            let closeButtons = document.querySelectorAll('.js-end-reply');
            console.log(closeButtons);//測試用，能抓到關閉按鈕
            closeButtons.forEach(closeBtn => {
                closeBtn.addEventListener('click', (e) => {
                    e.preventDefault();
                    const replyFormWrap = closeBtn.closest('.js-reply-form-wrap');
                    replyFormWrap.classList.remove('active');
                });
            });
        }


        async function loadPrimeComments() {
            const response = await fetch(`@Url.Content("~/Blogs/ShowComments")?BlogId=${blogId}`);
            const data = await response.text();

            //console.log(putIn);
            commentTable.innerHTML = '';
            commentTable.innerHTML += data;
        }
        async function processReplies() {
            let mainComment = document.querySelectorAll('.mainComment');
            //console.log(`主留言數量${mainComment.length}則`);
            for (const comment of mainComment) {
                await processReply(comment);
            }
        }


        /*在 JavaScript 中，函数的参数类型不是像一些静态类型语言（如 Java 或 C#）那样进行声明和显式定义的。
        JavaScript 是一种动态类型的语言，函数参数的类型通常是在运行时根据传递的实际参数值确定的。 */
        async function processReply(comment) {
            let commentId = comment.getAttribute('data-comment-id');
            const subResponse = await fetch(`@Url.Content("~/Blogs/ShowReplies")?mainCommentId=${commentId}`);
            const subData = await subResponse.text();
            let subPutIn = comment.querySelector('.subPutIn');
            subPutIn.innerHTML = '';
            subPutIn.innerHTML = subData;

            //如何取得?<h6 class="comment-replies-title mb-4 text-muted text-uppercase" data-reply-count="@Model.Count()">@Model.Count() 則回覆</h6>
            let replyCountElement = subPutIn.querySelector('.comment-replies-title');
            if (replyCountElement) {
                let replyCount = replyCountElement.getAttribute('data-reply-count');
                if (parseInt(replyCount) === 0) {
                    ///parseInt會自動將string轉型
                    subPutIn.style.display = 'none';
                }
            }
        }

        //載入側面欄位
        //瀏覽次數最多
        async function loadSidePopular() {
            const response = await fetch(`https://localhost:7078/api/Blogs/popular6`);
            const data = await response.json();
            console.log(data);
            const popularContainer = document.querySelector('#pills-popular');
            const popular6 = data.$values.map(blog => {
                const { blogId, title, author, articleClass, createdAt ,views} = blog;

                const date = new Date(createdAt);
                const year = date.getFullYear();
                const month = String(date.getMonth() + 1).padStart(2, '0');
                const day = String(date.getDate()).padStart(2, '0');
                const formattedDate = `${year}-${month}-${day}`;
                return ` <div class="post-entry-1 border-bottom">
                                                         <div class="post-meta">
                                                           <span class="date">${articleClass}</span>
                                                            <span class="mx-1">&bullet;</span>
                                                            <span>${formattedDate}</span>
                                                        </div>
                                                    <h2 class="mb-2"><a href="@Url.Content("~/Blogs/SinglePost")?SingleBlogID=${blogId}">${title}</a></h2>
                                                               <span class="author mb-3 d-block">${author}&nbsp;&nbsp;瀏覽人次:${views}</span>
                                                   </div>

                                                `
            })
            popularContainer.innerHTML = popular6.join('');
        }
        //最新

        async function loadSideLatest() {
            const response = await fetch(`https://localhost:7078/api/Blogs/latest6`);
            const data = await response.json();
            //console.log(data);
            const latestContainer = document.querySelector('#pills-latest');

            const latest6 = data.$values.map(blog => {
                const { blogId, title, author, articleClass, createdAt ,views} = blog;

                const date = new Date(createdAt);
                const year = date.getFullYear();
                const month = String(date.getMonth() + 1).padStart(2, '0');
                const day = String(date.getDate()).padStart(2, '0');
                const formattedDate = `${year}-${month}-${day}`;
                return ` <div class="post-entry-1 border-bottom">
                                                         <div class="post-meta">
                                                           <span class="date">${articleClass}</span>
                                                            <span class="mx-1">&bullet;</span>
                                                            <span>${formattedDate}</span>
                                                        </div>
                                                    <h2 class="mb-2"><a href="@Url.Content("~/Blogs/SinglePost")?SingleBlogID=${blogId}">${title}</a></h2>
                                                               <span class="author mb-3 d-block">${author}&nbsp;&nbsp;瀏覽人次:${views}</span>
                                                   </div>

                                                `
            })
            latestContainer.innerHTML = latest6.join('');
        }

        async function loadSideThisCat() {
            let url = `https://localhost:7078/api/Blogs/thisCat6/${blogClassId}`;
            console.log(url);
            const response = await fetch(`https://localhost:7078/api/Blogs/thisCat6/?id=${blogClassId}`);
            const data = await response.json();
            console.log(data);
            const thisCarContainer = document.querySelector('#pills-thisCat');
            const thisCat6 = data.$values.map(blog => {
                const { blogId, title, author, articleClass, createdAt ,views} = blog;

                const date = new Date(createdAt);
                const year = date.getFullYear();
                const month = String(date.getMonth() + 1).padStart(2, '0');
                const day = String(date.getDate()).padStart(2, '0');
                const formattedDate = `${year}-${month}-${day}`;
                return ` <div class="post-entry-1 border-bottom">
                                                         <div class="post-meta">
                                                           <span class="date">${articleClass}</span>
                                                            <span class="mx-1">&bullet;</span>
                                                            <span>${formattedDate}</span>
                                                        </div>
                                                    <h2 class="mb-2"><a href="@Url.Content("~/Blogs/SinglePost")?SingleBlogID=${blogId}">${title}</a></h2>
                                                               <span class="author mb-3 d-block">${author}&nbsp;&nbsp;瀏覽人次:${views}</span>
                                                   </div>

                                                `
            })
            thisCarContainer.innerHTML = thisCat6.join('');
            //const thisCat6
        }

        //回覆區塊的展開收合
        function toggleLinkEvent() {
            var toggleLinks = document.querySelectorAll('.toggleLink');
            //console.log(toggleLinks);

            toggleLinks.forEach(function (link) {
                link.addEventListener('click', function (event) {
                    event.preventDefault();
                    var icon = link.querySelector('.bi');
                    var parentDiv = icon.parentNode.parentNode;
                    var repliesSection = parentDiv.parentNode;
                    console.log(repliesSection);
                    var replySections = repliesSection.querySelectorAll('.reply');
                    console.log(replySections);
                    replySections.forEach(function (reply) {
                        reply.style.display = 'none!';
                        reply.setAttribute('style', 'display: none !important');

                    });
                    if (icon.classList.contains('bi-chevron-down')) {
                        icon.classList.remove('bi-chevron-down');
                        icon.classList.add('bi-chevron-up');
                        replySections.forEach(function (reply) {
                            reply.style.display = 'block';
                            reply.setAttribute('style', 'display: block !important');
                        });

                    } else {
                        icon.classList.remove('bi-chevron-up');
                        icon.classList.add('bi-chevron-down');
                        replySections.forEach(function (reply) {
                            reply.style.display = 'none!important';
                            reply.setAttribute('style', 'display: none !important');
                        });
                    }


                });
            });
        }



        //沒屁用
        function scrollToElement(elementId) {
            let selector = '#c' + elementId;
            console.log(selector);
            var element = document.querySelector(selector);
            if (element) {
                element.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
        }


    </script>
}
